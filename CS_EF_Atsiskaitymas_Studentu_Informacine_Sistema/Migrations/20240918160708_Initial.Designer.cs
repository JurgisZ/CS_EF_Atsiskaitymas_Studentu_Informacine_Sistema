// <auto-generated />
using System;
using CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Migrations
{
    [DbContext(typeof(StudentsDbContext))]
    [Migration("20240918160708_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.DepartmentLecture", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId", "LectureId");

                    b.HasIndex("LectureId");

                    b.ToTable("DepartmentsLectures", (string)null);
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Lecture", b =>
                {
                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("LectureId");

                    b.ToTable("Lectures", (string)null);
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.StudentLecture", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "LectureId");

                    b.HasIndex("LectureId");

                    b.ToTable("StudentLectures", (string)null);
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.DepartmentLecture", b =>
                {
                    b.HasOne("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Department", "Department")
                        .WithMany("DepartmentLectures")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Lecture", "Lecture")
                        .WithMany("DepartmentLectures")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Student", b =>
                {
                    b.HasOne("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.StudentLecture", b =>
                {
                    b.HasOne("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Lecture", "Lecture")
                        .WithMany("StudentLectures")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Student", "Student")
                        .WithMany("StudentLectures")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Department", b =>
                {
                    b.Navigation("DepartmentLectures");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Lecture", b =>
                {
                    b.Navigation("DepartmentLectures");

                    b.Navigation("StudentLectures");
                });

            modelBuilder.Entity("CS_EF_Atsiskaitymas_Studentu_Informacine_Sistema.Entities.Student", b =>
                {
                    b.Navigation("StudentLectures");
                });
#pragma warning restore 612, 618
        }
    }
}
